function simulateur_cinematique()
    %-----------------------------------------------------
    % Entrées : vitesse longitudinale (v) et angle de braquage (delta)
    % Sorties : position (x, y) et orientation (psi)
    %---------------------------------------------------------------

    % --- Paramètres du véhicule ---
    parvehicule.m  = 1310;     % Masse [kg]
    parvehicule.Iz = 1760;     % Moment d'inertie en lacet [kg.m^2]
    parvehicule.Lf = 1.2;      % Demi empattement avant [m]
    parvehicule.Lr = 1.4;      % Demi empattement arrière [m]
    parvehicule.Cf = 69740;    % Rigidité dérive avant [N/rad]
    parvehicule.Cr = 63460;    % Rigidité dérive arrière [N/rad]

    L = Lf + Lr;   % Empattement total [m]

    % --- Conditions initiales ---
    x0 = 0;        % Position initiale en X [m]
    y0 = 0;        % Position initiale en Y [m]
    theta0 = 0;      % Orientation initiale [rad]
    X0 = [x0; y0; theta0];

    % --- Paramètres de simulation ---
    dt = 0.01;             % Pas de temps [s]
    T = 20;                % Durée de simulation [s]
    t = 0:dt:T;

    % --- Entrées (exemple) ---
    parsimu.v = 10;                        % Vitesse constante [m/s]
    parsimudelta = 10*pi/180 * ones(size(t));  % Braquage constant de 10° [rad]

    % --- Simulation par intégration d'Euler ---
    X = zeros(3, length(t));
    X(:,1) = X0;

    for k = 1:length(t)-1
        x = X(1,k);
        y = X(2,k);
        psi = X(3,k);

        % Équations cinématiques du modèle bicycle
        dx   = v * cos(psi);
        dy   = v * sin(psi);
        d_theta = (v / L) * tan(delta(k));

        % Intégration d'Euler
        X(:,k+1) = X(:,k) + dt * [dx; dy; d_theta];
    end

    % --- Affichage ---

    subplot(2,1,1);
    grid on
    plot(X(1,:), X(2,:), 'b', 'LineWidth', 2); grid on;
    xlabel('x [m]');
    ylabel('y [m]');
    title('Trajectoire du véhicule (modèle cinématique)');
    axis equal;
    hold on;

  
    subplot(2,1,2);
    plot(t, X(3,:) * 180/pi, 'r', 'LineWidth', 2);
    xlabel('Temps [s]');
    ylabel('\theta [°]');
    title('Évolution de l''orientation du véhicule');
    grid on

    
end